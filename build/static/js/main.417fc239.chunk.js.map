{"version":3,"sources":["components/TodoList.js","components/TodoForm.js","components/App.js","reportWebVitals.js","index.js"],"names":["TodoList","props","useState","modalIsOpen","setModalIsOpen","id","title","task","isCompleted","dateCreated","dateUpdated","taskSave","setTaskSave","className","todoList","map","onClick","openNote","e","deleteTask","isOpen","shouldCloseOnOverlayClick","onRequestClose","type","value","onChange","target","onSubmit","preventDefault","editTask","moment","format","cols","rows","TodoForm","todo","setTodo","JSON","parse","localStorage","getItem","setTodoList","setTitle","handleChangeTitle","placeholder","name","handleChangeNote","taskDetails","Math","floor","random","newTodoList","setItem","stringify","stopPropagation","window","confirm","filter","index","findIndex","item","console","log","Modal","setAppElement","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.417fc239.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport '../styles/TodoList.css';\nimport Modal from 'react-modal';\nimport moment from 'moment';\n\nfunction TodoList(props) {\n\tconst [modalIsOpen, setModalIsOpen] = useState(false);\n\tconst [taskSave, setTaskSave] = useState({\n\t\tid: '',\n\t\ttitle: '',\n\t\ttask: '',\n\t\tisCompleted: '',\n\t\tdateCreated: '',\n\t\tdateUpdated: ''\n\t});\n\n\tfunction handleSubmit(e) {\n\t    e.preventDefault();\n        props.editTask({ ...taskSave, dateUpdated: moment().format('MMMM Do YYYY, h:mm:ss a')});\n        setModalIsOpen(false);\n\t}\n\n\tfunction openNote(task) {\n\t\tsetTaskSave(task);\n\t}\n\n\treturn (\n\t\t<div className='grid-wrapper'>\n\t\t\t{props.todoList !== [] ? (\n\t\t\t\t<ul>\n\t\t\t\t\t{props.todoList.map((task) => (\n\t\t\t\t\t\t<li className='grid-item' key={task.id} onClick={() => openNote(task)}>\n\t\t\t\t\t\t\t<div className='note-wrapper' onClick={() => setModalIsOpen(true)}>\n\t\t\t\t\t\t\t\t<span className='note-date'>{task.dateCreated} <i>(Initial date)</i></span>\n\t\t\t\t\t\t\t\t<span className='note-date'>{task.dateUpdated} <i>(date updated)</i></span>\n\t\t\t\t\t\t\t\t<span className='note-title'>{' '}<strong><u>Title</u> : {task.title}</strong></span>\n\t\t\t\t\t\t\t\t<span className='note-text'>{' '}<b><u>Text</u></b>{' '}: {task.task}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='btn-wrapper'>\n\t\t\t\t\t\t\t\t<button className='btn-red' onClick={(e) => props.deleteTask(e, task.id)}>Delete</button>\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : null}\n\n\t\t\t<Modal\n\t\t\t\tisOpen={modalIsOpen}\n\t\t\t\tshouldCloseOnOverlayClick={false}\n\t\t\t\tonRequestClose={() => setModalIsOpen(false)}>\n\t\t\t\t<div className='modal'>\n\t\t\t\t\t<div className='note-date'>{taskSave.dateCreated}</div>\n\t\t\t\t\t<br />\n\t\t\t\t\t<div className='note-title'><strong>\n\t\t\t\t\t\tTitle : <input type='text' value={taskSave.title} \n\t\t\t\t\t\tonChange={(e) => setTaskSave({ ...taskSave, title: e.target.value })}\t/>\t\t\t\n\t\t\t\t\t\t</strong></div>\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tcols='100'\n\t\t\t\t\t\t\trows='10'\n\t\t\t\t\t\t\tvalue={taskSave.task}\n\t\t\t\t\t\t\tonChange={(e) => setTaskSave({ ...taskSave, task: e.target.value })} >\n\t\t\t\t\t\t</textarea>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button className='btn-modal' onClick={() => setModalIsOpen(false)}>\n\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"submit\" className='btn-modal'>Edit</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n}\n\nexport default TodoList;","import React, { useState } from 'react';\nimport moment from 'moment';\nimport TodoList from './TodoList';\n\nfunction TodoForm() {\n\tconst [todo, setTodo] = useState('');\n\tconst [todoList, setTodoList] = useState(\n\t\t() => JSON.parse(localStorage.getItem('todoList')) || [],\n\t);\n\tconst [title, setTitle] = useState('');\n\n\tfunction handleChangeTitle(e) {\n\t\tsetTitle(e.target.value);\n\t}\n\n\tfunction handleChangeNote(e) {\n\t\tsetTodo(e.target.value);\n\t}\n\n\tfunction addTask() {\n\t\tif (todo !== '') {\n\t\t\tconst taskDetails = {\n\t\t\t\tid: Math.floor(Math.random() * 1000),\n\t\t\t\ttitle: title,\n\t\t\t\ttask: todo,\n\t\t\t\tisCompleted: false,\n\t\t\t\tdateCreated: moment().format('MMMM Do YYYY, h:mm:ss a'),\n\t\t\t};\n\n\t\t\tconst newTodoList = [...todoList, taskDetails];\n\t\t\tsetTodoList(newTodoList);\n\t\t\tlocalStorage.setItem('todoList', JSON.stringify(newTodoList));\n\t\t\tsetTitle('');\n\t\t\tsetTodo('');\n\t\t}\n\t}\n\n\tfunction deleteTask(e, id) {\n\t\te.stopPropagation();\n\n\t\tif (window.confirm('Are you sure you want to delete your note?')) {\n\t\t\tconst newTodoList = todoList.filter((task) => task.id !== id);\n\t\t\tsetTodoList(newTodoList);\n\t\t\tlocalStorage.setItem('todoList', JSON.stringify(newTodoList));\n\t\t}\n\t}\n\n\tfunction editTask(task) {\n\t\tconst index = todoList.findIndex((item) => item.id === task.id);\n\t\tconst newTodoList = [...todoList];\n\t\tnewTodoList[index] = task;\n\t\tsetTodoList(newTodoList);\n\t\tlocalStorage.setItem('todoList', JSON.stringify(newTodoList));\n\t\tconsole.log(task);\n\t}\n\n\treturn (\n\t\t<div className='form'>\n\t\t\t<div className='input-container'>\n\t\t\t\t<div className='title'>Todo List</div>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tonChange={(e) => handleChangeTitle(e)}\n\t\t\t\t\tplaceholder='Enter title'\n\t\t\t\t\tvalue={title}\n\t\t\t\t/>\n\t\t\t\t<textarea\n\t\t\t\t\trows='10'\n\t\t\t\t\tname='text'\n\t\t\t\t\tid='text'\n\t\t\t\t\tplaceholder='Enter task...'\n\t\t\t\t\tonChange={(e) => handleChangeNote(e)}\n\t\t\t\t\tvalue={todo}\n\t\t\t\t/>\n\n\t\t\t\t<button className='add-btn' onClick={addTask}>\n\t\t\t\t\tAdd\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<br />\n\n\t\t\t<TodoList todoList={todoList} deleteTask={deleteTask} editTask={editTask} />\n\t\t</div>\n\t);\n}\n\nexport default TodoForm;","import React from \"react\";\nimport '../styles/App.css';\nimport TodoForm from './TodoForm';\nimport Modal from 'react-modal';\n\nModal.setAppElement('#root');\nfunction App() {\n \n  return (\n    <div className='App'>\n      <TodoForm /> \n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}