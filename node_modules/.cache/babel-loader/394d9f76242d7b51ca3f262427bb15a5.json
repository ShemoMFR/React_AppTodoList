{"ast":null,"code":"import _toConsumableArray from\"/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import moment from'moment';import TodoList from'./TodoList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TodoForm(input){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),todo=_useState2[0],setTodo=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),todoList=_useState4[0],setTodoList=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),title=_useState6[0],setTitle=_useState6[1];function handleChangeTitle(e){setTitle(e.target.value);}function handleChangeNote(e){setTodo(e.target.value);};function addTask(){if(todo!==\"\"){var taskDetails={id:Math.floor(Math.random()*1000),title:title,task:todo,isCompleted:false,dateCreated:moment().format('MMMM Do YYYY, h:mm:ss a'),dateUpdates:''};setTodoList([].concat(_toConsumableArray(todoList),[taskDetails]));}};function deleteTask(e,id){e.preventDefault();if(window.confirm(\"Are you sure you want to delete your note?\")){setTodoList(todoList.filter(function(task){return task.id!==id;}));}};function editTask(task){var index=todoList.findIndex(function(item){return item.id===task.id;});var copy=_toConsumableArray(todoList);copy[index]=task;setTodoList(copy);}return/*#__PURE__*/_jsxs(\"div\",{className:\"form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"Todo List\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:function onChange(e){return handleChangeTitle(e);},placeholder:\"Enter title\"}),/*#__PURE__*/_jsx(\"textarea\",{rows:\"10\",name:\"text\",id:\"text\",placeholder:\"Enter task...\",onChange:function onChange(e){return handleChangeNote(e);}}),/*#__PURE__*/_jsx(\"button\",{className:\"add-btn\",onClick:addTask,children:\"Add\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(TodoList,{todoList:todoList,deleteTask:deleteTask,editTask:editTask})]});}export default TodoForm;","map":{"version":3,"sources":["/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/src/components/TodoForm.js"],"names":["React","useState","moment","TodoList","TodoForm","input","todo","setTodo","todoList","setTodoList","title","setTitle","handleChangeTitle","e","target","value","handleChangeNote","addTask","taskDetails","id","Math","floor","random","task","isCompleted","dateCreated","format","dateUpdates","deleteTask","preventDefault","window","confirm","filter","editTask","index","findIndex","item","copy"],"mappings":"sZAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,wFAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,eAEGJ,QAAQ,CAAC,EAAD,CAFX,wCAEdK,IAFc,eAERC,OAFQ,8BAGWN,QAAQ,CAAC,EAAD,CAHnB,yCAGdO,QAHc,eAGJC,WAHI,8BAIKR,QAAQ,CAAC,EAAD,CAJb,yCAIdS,KAJc,eAIPC,QAJO,eAMrB,QAASC,CAAAA,iBAAT,CAA2BC,CAA3B,CAA8B,CAC1BF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CACH,CAED,QAASC,CAAAA,gBAAT,CAA0BH,CAA1B,CAA6B,CACzBN,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CACH,EAED,QAASE,CAAAA,OAAT,EAAmB,CACf,GAAIX,IAAI,GAAK,EAAb,CAAiB,CACb,GAAMY,CAAAA,WAAW,CAAG,CAChBC,EAAE,CAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,IAA3B,CADY,CAEhBZ,KAAK,CAAEA,KAFS,CAGhBa,IAAI,CAAEjB,IAHU,CAIhBkB,WAAW,CAAE,KAJG,CAKhBC,WAAW,CAAEvB,MAAM,GAAGwB,MAAT,CAAgB,yBAAhB,CALG,CAMhBC,WAAW,CAAE,EANG,CAApB,CASAlB,WAAW,8BAAKD,QAAL,GAAeU,WAAf,GAAX,CAEH,CACJ,EAED,QAASU,CAAAA,UAAT,CAAoBf,CAApB,CAAuBM,EAAvB,CAA2B,CAEvBN,CAAC,CAACgB,cAAF,GAEA,GAAIC,MAAM,CAACC,OAAP,CAAe,4CAAf,CAAJ,CAAkE,CAC9DtB,WAAW,CAACD,QAAQ,CAACwB,MAAT,CAAgB,SAAAT,IAAI,QAAIA,CAAAA,IAAI,CAACJ,EAAL,GAAYA,EAAhB,EAApB,CAAD,CAAX,CACH,CACJ,EAED,QAASc,CAAAA,QAAT,CAAkBV,IAAlB,CAAwB,CACpB,GAAMW,CAAAA,KAAK,CAAG1B,QAAQ,CAAC2B,SAAT,CAAmB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACjB,EAAL,GAAYI,IAAI,CAACJ,EAA3B,EAAnB,CAAd,CACA,GAAMkB,CAAAA,IAAI,oBAAO7B,QAAP,CAAV,CACA6B,IAAI,CAACH,KAAD,CAAJ,CAAcX,IAAd,CACAd,WAAW,CAAC4B,IAAD,CAAX,CACH,CAED,mBACI,aAAK,SAAS,CAAC,MAAf,wBACI,aAAK,SAAS,CAAC,iBAAf,wBACI,YAAK,SAAS,CAAC,OAAf,uBADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,QAAQ,CAAE,kBAACxB,CAAD,QAAOD,CAAAA,iBAAiB,CAACC,CAAD,CAAxB,EAA7B,CAA0D,WAAW,CAAC,aAAtE,EAFJ,cAGI,iBACI,IAAI,CAAC,IADT,CAEI,IAAI,CAAC,MAFT,CAGI,EAAE,CAAC,MAHP,CAII,WAAW,CAAC,eAJhB,CAKI,QAAQ,CAAE,kBAACA,CAAD,QAAOG,CAAAA,gBAAgB,CAACH,CAAD,CAAvB,EALd,EAHJ,cAUI,eAAQ,SAAS,CAAC,SAAlB,CAA4B,OAAO,CAAEI,OAArC,iBAVJ,GADJ,cAaI,aAbJ,cAeI,KAAC,QAAD,EAAU,QAAQ,CAAET,QAApB,CAA8B,UAAU,CAAEoB,UAA1C,CAAsD,QAAQ,CAAEK,QAAhE,EAfJ,GADJ,CAmBH,CAGD,cAAe7B,CAAAA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport moment from 'moment';\nimport TodoList from './TodoList';\n\nfunction TodoForm(input) {\n\n    const [todo, setTodo] = useState('');\n    const [todoList, setTodoList] = useState([]);\n    const [title, setTitle] = useState('');\n\n    function handleChangeTitle(e) {\n        setTitle(e.target.value);\n    }\n\n    function handleChangeNote(e) {\n        setTodo(e.target.value);\n    };\n\n    function addTask() {\n        if (todo !== \"\") {\n            const taskDetails = {\n                id: Math.floor(Math.random() * 1000),\n                title: title,\n                task: todo,\n                isCompleted: false,\n                dateCreated: moment().format('MMMM Do YYYY, h:mm:ss a'),\n                dateUpdates: ''\n            }\n\n            setTodoList([...todoList, taskDetails]);\n          \n        }\n    };\n\n    function deleteTask(e, id) {\n\n        e.preventDefault();\n        \n        if (window.confirm(\"Are you sure you want to delete your note?\")) {\n            setTodoList(todoList.filter(task => task.id !== id)); \n        }\n    };\n\n    function editTask(task) {\n        const index = todoList.findIndex((item) => item.id === task.id);\n        const copy = [...todoList];\n        copy[index] = task;\n        setTodoList(copy); \n    }\n\n    return (\n        <div className=\"form\" >\n            <div className=\"input-container\">\n                <div className=\"title\">Todo List</div>\n                <input type='text' onChange={(e) => handleChangeTitle(e)} placeholder='Enter title' /> \n                <textarea \n                    rows=\"10\"\n                    name=\"text\" \n                    id=\"text\" \n                    placeholder=\"Enter task...\"\n                    onChange={(e) => handleChangeNote(e)} >\n                </textarea>\n                <button className=\"add-btn\" onClick={addTask}>Add</button>\n            </div>\n            <br/>\n\n            <TodoList todoList={todoList} deleteTask={deleteTask} editTask={editTask}/>\n        </div>\n    );\n}\n\n\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}