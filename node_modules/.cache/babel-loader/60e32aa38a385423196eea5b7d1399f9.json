{"ast":null,"code":"var _jsxFileName = \"/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../styles/TodoList.css';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList(props) {\n  _s();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-wrapper\",\n    children: props.todoList !== [] ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.todoList.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"grid-item\",\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modalIsOpen,\n          shouldCloseOnOverlayClick: false,\n          onRequestClose: () => setModalIsOpen(false),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"note-date\",\n              children: task.dateCreated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 76\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"note-title\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Title : \", task.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 54\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: task.task,\n              children: \"  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setModalIsOpen(false),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"note-date\",\n            children: task.dateCreated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"note-title\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [/*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 59\n              }, this), \" : \", task.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"note-text\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 50\n            }, this), \" : \", task.task]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-red\",\n            onClick: e => props.deleteTask(e, task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-green\",\n            onClick: () => setModalIsOpen(true),\n            children: \" OPEN \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"d4gKB9FOjUoqrytIak5jiPIqzB0=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/src/components/TodoList.js"],"names":["React","useState","Modal","TodoList","props","modalIsOpen","setModalIsOpen","todoList","map","task","dateCreated","title","e","deleteTask","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,wBAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;AAEA,sBACA;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cACCG,KAAK,CAACG,QAAN,KAAmB,EAAnB,gBACG;AAAA,gBACKH,KAAK,CAACG,QAAN,CAAeC,GAAf,CAAmBC,IAAI,iBACxB;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,MAAM,EAAEJ,WAAf;AAA4B,UAAA,yBAAyB,EAAE,KAAvD;AAA8D,UAAA,cAAc,EAAE,MAAMC,cAAc,CAAC,KAAD,CAAlG;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,wBAA4BG,IAAI,CAACC;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADJ,eACuD;AAAA;AAAA;AAAA;AAAA,oBADvD,eAEI;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,2CAA6B;AAAA,uCAAiBD,IAAI,CAACE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAO,cAAA,KAAK,EAAEF,IAAI,CAACA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAQ,cAAA,OAAO,EAAE,MAAMH,cAAc,CAAC,KAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,WAAhB;AAAA,sBAA6BG,IAAI,CAACC;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA,yCAA8B;AAAA,sCAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAR,SAAwBD,IAAI,CAACE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAM,YAAA,SAAS,EAAC,WAAhB;AAAA,yCAA6B;AAAA,qCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBAA7B,SAAmDF,IAAI,CAACA,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAcI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAQ,YAAA,SAAS,EAAC,SAAlB;AAA4B,YAAA,OAAO,EAAGG,CAAD,IAAOR,KAAK,CAACS,UAAN,CAAiBD,CAAjB,EAAoBH,IAAI,CAACK,EAAzB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAC,WAAlB;AAA8B,YAAA,OAAO,EAAE,MAAMR,cAAc,CAAC,IAAD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA,SAA+BG,IAAI,CAACK,EAApC;AAAA;AAAA;AAAA;AAAA,cADC;AADL;AAAA;AAAA;AAAA;AAAA,YADH,GAyBG;AA1BJ;AAAA;AAAA;AAAA;AAAA,UADA;AA8BH;;GAlCQX,Q;;KAAAA,Q;AAoCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport '../styles/TodoList.css';\nimport Modal from 'react-modal'; \n\nfunction TodoList(props) {\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    return (\n    <div className='grid-wrapper'>\n    {props.todoList !== [] ? (\n        <ul>\n            {props.todoList.map(task => \n            <li className='grid-item' key={task.id} >\n                <Modal isOpen={modalIsOpen} shouldCloseOnOverlayClick={false} onRequestClose={() => setModalIsOpen(false)} >\n                    <div className='modal'>\n                        <div className='note-date'>{task.dateCreated}</div><br/>\n                        <div className='note-title'> <strong>Title : {task.title}</strong></div>\n                        <input value={task.task}>  </input>             \n                        <button onClick={() => setModalIsOpen(false)}>Close</button>\n                    </div>            \n                </Modal>\n                <div className='note-wrapper'>\n                    <span className='note-date'>{task.dateCreated}</span>\n                    <span className='note-title'> <strong><u>Title</u> : {task.title}</strong></span>\n                    <span className='note-text'> <b><u>Text</u></b> : {task.task}</span>\n                </div>\n                <div className='btn-wrapper'>\n                    <button className='btn-red' onClick={(e) => props.deleteTask(e, task.id)}>Delete</button>                                                         \n                    <button className='btn-green' onClick={() => setModalIsOpen(true)}> OPEN </button>  \n                </div>\n            </li>\n\n            )}\n        </ul>\n    ) : null}\n</div>\n    );\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}