{"ast":null,"code":"var _jsxFileName = \"/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { confirm } from '/confirm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(input) {\n  _s();\n\n  const [todo, setTodo] = useState('');\n  const [todoList, setTodoList] = useState([]);\n\n  function handleChange(e) {\n    setTodo(e.target.value);\n  }\n\n  ;\n\n  function addTask() {\n    if (todo != \"\") {\n      const taskDetails = {\n        id: Math.floor(Math.random() * 1000),\n        task: todo,\n        isCompleted: false\n      };\n      setTodoList([...todoList, taskDetails]);\n    }\n  }\n\n  ;\n\n  function deleteTask(e, id) {\n    if (confirm(\"Are you sure you want to delete your note?\")) {\n      e.preventDefault();\n      setTodoList(todoList.filter(task => task.id != id));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"text\",\n      id: \"text\",\n      placeholder: \"Enter task...\",\n      onChange: e => handleChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: addTask,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), todoList != [] ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoList.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          width: \"400px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          listStyleType: \"none\",\n          padding: \"10px\",\n          textAlign: \"start\",\n          border: \"1px solid grey\",\n          backgroundColor: \"rgba(50, 50, 50, 0.5)\",\n          color: \"white\"\n        },\n        children: [\" \", task.task, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => deleteTask(e, task.id),\n          style: {\n            width: \"80px\",\n            backgroundColor: \"red\",\n            color: \"white\",\n            border: \"1px solid red\",\n            borderRadius: \"20px\",\n            textAlign: \"center\"\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: \"80px\",\n            backgroundColor: \"green\",\n            color: \"white\",\n            border: \"1px solid green\",\n            borderRadius: \"20px\",\n            textAlign: \"center\",\n            marginLeft: \"-200px\"\n          },\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"o/RgA939ALX1BSvnnDXbMDgy4Zk=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/src/components/TodoForm.js"],"names":["React","useState","confirm","TodoForm","input","todo","setTodo","todoList","setTodoList","handleChange","e","target","value","addTask","taskDetails","id","Math","floor","random","task","isCompleted","deleteTask","preventDefault","filter","map","width","display","justifyContent","listStyleType","padding","textAlign","border","backgroundColor","color","borderRadius","marginLeft"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {confirm} from '/confirm';\n\nfunction TodoForm(input) {\n\n    const [todo, setTodo] = useState('');\n    const [todoList, setTodoList] = useState([]);\n\n    function handleChange(e) {\n        setTodo(e.target.value);\n    };\n\n    function addTask() {\n        if (todo != \"\") {\n            const taskDetails = {\n                id: Math.floor(Math.random() * 1000),\n                task: todo,\n                isCompleted: false\n            }\n\n            setTodoList([...todoList, taskDetails]);\n        }\n    };\n\n    function deleteTask(e, id) {\n\n        if (confirm(\"Are you sure you want to delete your note?\")) {\n            e.preventDefault();\n            setTodoList(todoList.filter(task => task.id != id));\n        }       \n    }\n\n    return (\n        <div className=\"form\" >\n            <input \n                type=\"text\" \n                name=\"text\" \n                id=\"text\" \n                placeholder=\"Enter task...\"\n                onChange={(e) => handleChange(e)} >\n            </input>\n            <button className=\"add-btn\" onClick={addTask}>Add</button>\n            <br/>\n\n            {todoList != [] ? (\n            <ul>\n                {todoList.map(task => \n                <li style={{\n                    width: \"400px\",\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    listStyleType: \"none\",\n                    padding: \"10px\",\n                    textAlign: \"start\",\n                    border: \"1px solid grey\",\n                    backgroundColor: \"rgba(50, 50, 50, 0.5)\", \n                    color: \"white\"\n                }}> {task.task} \n                <button onClick={(e) => deleteTask(e, task.id)}style={{\n                    width: \"80px\",\n                    backgroundColor: \"red\",\n                    color: \"white\",\n                    border: \"1px solid red\",\n                    borderRadius: \"20px\",\n                    textAlign: \"center\"\n                }}>Delete</button>\n                  <button style={{\n                    width: \"80px\",\n                    backgroundColor: \"green\",\n                    color: \"white\",\n                    border: \"1px solid green\",\n                    borderRadius: \"20px\",\n                    textAlign: \"center\",\n                    marginLeft: \"-200px\"\n                }}>Completed</button>\n                </li>\n\n                )}\n            </ul>\n            ) : null}\n        </div>\n    );\n}\n\n\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}