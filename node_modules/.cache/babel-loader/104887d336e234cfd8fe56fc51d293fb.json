{"ast":null,"code":"var _jsxFileName = \"/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../styles/TodoList.css';\nimport Modal from 'react-modal';\nimport { EditText } from 'react-edit-text';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList(props) {\n  _s();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [editText, setEditText] = useState('');\n  const [taskSave, setTaskSave] = useState({\n    id: '',\n    title: '',\n    task: '',\n    isCompleted: '',\n    dateCreated: ''\n  });\n\n  function handleEditText(e) {\n    setEditText(e.value);\n    e.stopPropagation();\n  }\n\n  function editTask(task) {\n    console.log(task);\n    task.task = editText;\n    setModalIsOpen(false);\n  }\n\n  function openNote(task) {\n    setModalIsOpen(true);\n    setTaskSave(task);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-wrapper\",\n    children: [props.todoList !== [] ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.todoList.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"grid-item\",\n        onClick: () => openNote(task),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-wrapper\",\n          onClick: () => setModalIsOpen(true),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"note-date\",\n            children: task.dateCreated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"note-title\",\n            children: [' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [/*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 11\n              }, this), \" : \", task.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"note-text\",\n            children: [' ', /*#__PURE__*/_jsxDEV(\"b\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 10\n            }, this), ' ', \": \", task.task]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-red\",\n            onClick: e => props.deleteTask(e, task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 8\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this) : null, /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      shouldCloseOnOverlayClick: false,\n      onRequestClose: () => setModalIsOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-date\",\n          children: taskSave.dateCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-title\",\n          children: [' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Title : \", taskSave.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(EditText, {\n          onSave: e => handleEditText(e),\n          defaultValue: taskSave.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-modal\",\n            onClick: () => setModalIsOpen(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-modal\",\n            onClick: editTask.bind(taskSave.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n}\n\n_s(TodoList, \"bdmVFUTmToPqVD4884tp9m16MWA=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/src/components/TodoList.js"],"names":["React","useState","Modal","EditText","TodoList","props","modalIsOpen","setModalIsOpen","editText","setEditText","taskSave","setTaskSave","id","title","task","isCompleted","dateCreated","handleEditText","e","value","stopPropagation","editTask","console","log","openNote","todoList","map","deleteTask","bind"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport '../styles/TodoList.css';\nimport Modal from 'react-modal';\nimport { EditText } from 'react-edit-text';\n\nfunction TodoList(props) {\n\tconst [modalIsOpen, setModalIsOpen] = useState(false);\n\tconst [editText, setEditText] = useState('');\n\tconst [taskSave, setTaskSave] = useState({\n\t\tid: '',\n\t\ttitle: '',\n\t\ttask: '',\n\t\tisCompleted: '',\n\t\tdateCreated: '',\n\t});\n\n\tfunction handleEditText(e) {\n\t\tsetEditText(e.value);\n\t\te.stopPropagation();\n\t}\n\n\tfunction editTask(task) {\n\t\tconsole.log(task);\n\n\t\ttask.task = editText;\n\t\tsetModalIsOpen(false);\n\t}\n\n    function openNote(task){\n        setModalIsOpen(true)\n        setTaskSave(task);\n    }\n\n\treturn (\n\t\t<div className='grid-wrapper'>\n\t\t\t{props.todoList !== [] ? (\n\t\t\t\t<ul>\n\t\t\t\t\t{props.todoList.map((task) => (\n\t\t\t\t\t\t<li className='grid-item' key={task.id} onClick={() => openNote(task)}>\n\t\t\t\t\t\t\t<div className='note-wrapper' onClick={() => setModalIsOpen(true)}>\n\t\t\t\t\t\t\t\t<span className='note-date'>{task.dateCreated}</span>\n\t\t\t\t\t\t\t\t<span className='note-title'>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t\t<u>Title</u> : {task.title}\n\t\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className='note-text'>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t\t<u>Text</u>\n\t\t\t\t\t\t\t\t\t</b>{' '}\n\t\t\t\t\t\t\t\t\t: {task.task}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='btn-wrapper'>\n\t\t\t\t\t\t\t\t<button className='btn-red' onClick={(e) => props.deleteTask(e, task.id)}>\n\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : null}\n\n\t\t\t\t<Modal\n\t\t\t\t\tisOpen={modalIsOpen}\n\t\t\t\t\tshouldCloseOnOverlayClick={false}\n\t\t\t\t\tonRequestClose={() => setModalIsOpen(false)}>\n\t\t\t\t\t<div className='modal'>\n\t\t\t\t\t\t<div className='note-date'>{taskSave.dateCreated}</div>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div className='note-title'>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t<strong>Title : {taskSave.title}</strong>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<EditText onSave={(e) => handleEditText(e)} defaultValue={taskSave.task} />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button className='btn-modal' onClick={() => setModalIsOpen(false)}>\n\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button className='btn-modal' onClick={editTask.bind(taskSave.id)}>\n\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\t\t\t</div>\n\t\n\t);\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}