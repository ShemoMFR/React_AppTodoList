{"ast":null,"code":"var _jsxFileName = \"/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport '../styles/TodoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(input) {\n  _s();\n\n  const [todo, setTodo] = useState('');\n  const [todoList, setTodoList] = useState([]);\n\n  function handleChange(e) {\n    setTodo(e.target.value);\n  }\n\n  ;\n\n  function addTask() {\n    if (todo !== \"\") {\n      const taskDetails = {\n        id: Math.floor(Math.random() * 1000),\n        //title: title,\n        task: todo,\n        isCompleted: false,\n        dateCreated: moment().format('MMMM Do YYYY, h:mm:ss a')\n      };\n      setTodoList([...todoList, taskDetails]);\n    }\n  }\n\n  ;\n\n  function deleteTask(e, id) {\n    e.preventDefault();\n    setTodoList(todoList.filter(task => task.id !== id));\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"10\",\n        name: \"text\",\n        id: \"text\",\n        placeholder: \"Enter task...\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-btn\",\n        onClick: addTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-wrapper\",\n      children: todoList !== [] ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: todoList.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"grid-item\",\n          children: [\" \", task.dateCreated, \" \", task.task, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-red\",\n            onClick: e => deleteTask(e, task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-green\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"o/RgA939ALX1BSvnnDXbMDgy4Zk=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/src/components/TodoForm.js"],"names":["React","useState","moment","TodoForm","input","todo","setTodo","todoList","setTodoList","handleChange","e","target","value","addTask","taskDetails","id","Math","floor","random","task","isCompleted","dateCreated","format","deleteTask","preventDefault","filter","map"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport moment from 'moment';\nimport '../styles/TodoList.css';\n\nfunction TodoForm(input) {\n\n    const [todo, setTodo] = useState('');\n    const [todoList, setTodoList] = useState([]);\n\n    function handleChange(e) {\n        setTodo(e.target.value);\n    };\n\n    function addTask() {\n        if (todo !== \"\") {\n            const taskDetails = {\n                id: Math.floor(Math.random() * 1000),\n                //title: title,\n                task: todo,\n                isCompleted: false,\n                dateCreated: moment().format('MMMM Do YYYY, h:mm:ss a')\n            }\n\n            setTodoList([...todoList, taskDetails]);\n        }\n    };\n\n    function deleteTask(e, id) {\n\n        e.preventDefault();\n        setTodoList(todoList.filter(task => task.id !== id));   \n    };\n\n    return (\n        <div className=\"form\" >\n            <div className=\"input-container\">\n                <div className=\"title\">Todo List</div>\n                <input type='text' placeholder='Enter title' /> \n                <textarea \n                    rows=\"10\"\n                    name=\"text\" \n                    id=\"text\" \n                    placeholder=\"Enter task...\"\n                    onChange={(e) => handleChange(e)} >\n                </textarea>\n                <button className=\"add-btn\" onClick={addTask}>Add</button>\n            </div>\n            <br/>\n\n            <div className='grid-wrapper'>\n                {todoList !== [] ? (\n                <ul>\n                    {todoList.map(task => \n                    <li className='grid-item'> {task.dateCreated} {task.task}\n                    <button className='btn-red' onClick={(e) => deleteTask(e, task.id)} \n                   >Delete</button>\n                    <button className='btn-green'>Completed</button>\n                    </li>\n\n                    )}\n                </ul>\n                ) : null}\n            </div>\n        </div>\n    );\n}\n\n\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}