{"ast":null,"code":"var _jsxFileName = \"/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport TodoList from './TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(input) {\n  _s();\n\n  const [todo, setTodo] = useState('');\n  const [todoList, setTodoList] = useState([]);\n  const [title, setTitle] = useState('');\n\n  function handleChangeTitle(e) {\n    setTitle(e.target.value);\n  }\n\n  function handleChangeNote(e) {\n    setTodo(e.target.value);\n  }\n\n  ;\n\n  function addTask(e) {\n    if (todo !== \"\") {\n      const taskDetails = {\n        id: Math.floor(Math.random() * 1000),\n        title: title,\n        task: todo,\n        isCompleted: false,\n        dateCreated: moment().format('MMMM Do YYYY, h:mm:ss a')\n      };\n      setTodoList([...todoList, taskDetails]);\n    }\n  }\n\n  ;\n\n  function deleteTask(e, id) {\n    e.preventDefault();\n\n    if (window.confirm(\"Are you sure you want to delete your note?\")) {\n      setTodoList(todoList.filter(task => task.id !== id));\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => handleChangeTitle(e),\n        placeholder: \"Enter title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"10\",\n        name: \"text\",\n        id: \"text\",\n        placeholder: \"Enter task...\",\n        onChange: e => handleChangeNote(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-btn\",\n        onClick: addTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todoList: todoList,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"bXZv5dECOZTunAgQKrscD5S55k4=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/src/components/TodoForm.js"],"names":["React","useState","moment","TodoList","TodoForm","input","todo","setTodo","todoList","setTodoList","title","setTitle","handleChangeTitle","e","target","value","handleChangeNote","addTask","taskDetails","id","Math","floor","random","task","isCompleted","dateCreated","format","deleteTask","preventDefault","window","confirm","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASW,iBAAT,CAA2BC,CAA3B,EAA8B;AAC1BF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH;;AAED,WAASC,gBAAT,CAA0BH,CAA1B,EAA6B;AACzBN,IAAAA,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH;;AAAA;;AAED,WAASE,OAAT,CAAiBJ,CAAjB,EAAoB;AAChB,QAAIP,IAAI,KAAK,EAAb,EAAiB;AACb,YAAMY,WAAW,GAAG;AAChBC,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CADY;AAEhBZ,QAAAA,KAAK,EAAEA,KAFS;AAGhBa,QAAAA,IAAI,EAAEjB,IAHU;AAIhBkB,QAAAA,WAAW,EAAE,KAJG;AAKhBC,QAAAA,WAAW,EAAEvB,MAAM,GAAGwB,MAAT,CAAgB,yBAAhB;AALG,OAApB;AAQAjB,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcU,WAAd,CAAD,CAAX;AAEH;AACJ;;AAAA;;AAED,WAASS,UAAT,CAAoBd,CAApB,EAAuBM,EAAvB,EAA2B;AAEvBN,IAAAA,CAAC,CAACe,cAAF;;AAEA,QAAIC,MAAM,CAACC,OAAP,CAAe,4CAAf,CAAJ,EAAkE;AAC9DrB,MAAAA,WAAW,CAACD,QAAQ,CAACuB,MAAT,CAAgBR,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAApC,CAAD,CAAX;AACH;AACJ;;AAAA;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAGN,CAAD,IAAOD,iBAAiB,CAACC,CAAD,CAArD;AAA0D,QAAA,WAAW,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AACI,QAAA,IAAI,EAAC,IADT;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,EAAE,EAAC,MAHP;AAII,QAAA,WAAW,EAAC,eAJhB;AAKI,QAAA,QAAQ,EAAGA,CAAD,IAAOG,gBAAgB,CAACH,CAAD;AALrC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAUI;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAEI,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI;AAAA;AAAA;AAAA;AAAA,YAbJ,eAeI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAET,QAApB;AAA8B,MAAA,UAAU,EAAEmB;AAA1C;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAzDQvB,Q;;KAAAA,Q;AA4DT,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport moment from 'moment';\nimport TodoList from './TodoList';\n\nfunction TodoForm(input) {\n\n    const [todo, setTodo] = useState('');\n    const [todoList, setTodoList] = useState([]);\n    const [title, setTitle] = useState('');\n\n    function handleChangeTitle(e) {\n        setTitle(e.target.value);\n    }\n\n    function handleChangeNote(e) {\n        setTodo(e.target.value);\n    };\n\n    function addTask(e) {\n        if (todo !== \"\") {\n            const taskDetails = {\n                id: Math.floor(Math.random() * 1000),\n                title: title,\n                task: todo,\n                isCompleted: false,\n                dateCreated: moment().format('MMMM Do YYYY, h:mm:ss a')\n            }\n\n            setTodoList([...todoList, taskDetails]);\n\n        }\n    };\n\n    function deleteTask(e, id) {\n\n        e.preventDefault();\n        \n        if (window.confirm(\"Are you sure you want to delete your note?\")) {\n            setTodoList(todoList.filter(task => task.id !== id)); \n        }\n    };\n\n    return (\n        <div className=\"form\" >\n            <div className=\"input-container\">\n                <div className=\"title\">Todo List</div>\n                <input type='text' onChange={(e) => handleChangeTitle(e)} placeholder='Enter title' /> \n                <textarea \n                    rows=\"10\"\n                    name=\"text\" \n                    id=\"text\" \n                    placeholder=\"Enter task...\"\n                    onChange={(e) => handleChangeNote(e)} >\n                </textarea>\n                <button className=\"add-btn\" onClick={addTask}>Add</button>\n            </div>\n            <br/>\n\n            <TodoList todoList={todoList} deleteTask={deleteTask}/>\n        </div>\n    );\n}\n\n\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}