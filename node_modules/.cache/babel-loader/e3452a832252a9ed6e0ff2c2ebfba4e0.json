{"ast":null,"code":"var _jsxFileName = \"/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../styles/TodoList.css';\nimport Modal from 'react-modal';\nimport { EditText, EditTextarea } from 'react-edit-text';\nimport TodoForm from './TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList(props) {\n  _s();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  function editTask(id) {\n    setTotoList({\n      task: todo\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-wrapper\",\n    children: props.todoList !== [] ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.todoList.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"grid-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => e.stopPropagation(),\n          children: /*#__PURE__*/_jsxDEV(Modal, {\n            isOpen: modalIsOpen,\n            shouldCloseOnOverlayClick: false,\n            onRequestClose: () => setModalIsOpen(false),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"note-date\",\n                children: task.dateCreated\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 80\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"note-title\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"Title : \", task.title]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(EditText, {\n                onChange: props.changeText,\n                defaultValue: task.task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-modal\",\n                  onClick: () => setModalIsOpen(false),\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-modal\",\n                  onClick: editTask,\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-wrapper\",\n          onClick: () => setModalIsOpen(true),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"note-date\",\n            children: task.dateCreated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"note-title\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [/*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 59\n              }, this), \" : \", task.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"note-text\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 50\n            }, this), \" : \", task.task]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-red\",\n            onClick: e => props.deleteTask(e, task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"d4gKB9FOjUoqrytIak5jiPIqzB0=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/src/components/TodoList.js"],"names":["React","useState","Modal","EditText","EditTextarea","TodoForm","TodoList","props","modalIsOpen","setModalIsOpen","editTask","id","setTotoList","task","todo","todoList","map","e","stopPropagation","dateCreated","title","changeText","deleteTask"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport '../styles/TodoList.css';\nimport Modal from 'react-modal'; \nimport { EditText, EditTextarea } from 'react-edit-text';\nimport TodoForm from './TodoForm';\n\nfunction TodoList(props) {\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    function editTask(id) {\n        setTotoList({task: todo}); \n    }\n\n    return (\n    <div className='grid-wrapper'>\n    {props.todoList !== [] ? (\n        <ul>\n            {props.todoList.map(task => \n            <li className='grid-item'  key={task.id} >\n                <div onClick={(e) => e.stopPropagation()}> \n                    <Modal isOpen={modalIsOpen} shouldCloseOnOverlayClick={false} onRequestClose={() => setModalIsOpen(false)} >\n                        <div className='modal' >\n                            <div className='note-date'>{task.dateCreated}</div><br/>\n                            <div className='note-title'> <strong>Title : {task.title}</strong></div>\n                            <EditText onChange={props.changeText} defaultValue={task.task} />\n                            <div>         \n                                <button className='btn-modal' onClick={() => setModalIsOpen(false)}>Close</button>\n                                <button className='btn-modal' onClick={editTask} >Edit</button>\n                            </div>\n                        </div>            \n                    </Modal>\n                </div>\n                <div className='note-wrapper' onClick={() => setModalIsOpen(true)}>\n                    <span className='note-date'>{task.dateCreated}</span>\n                    <span className='note-title'> <strong><u>Title</u> : {task.title}</strong></span>\n                    <span className='note-text'> <b><u>Text</u></b> : {task.task}</span>\n                </div>\n                <div className='btn-wrapper'>\n                    <button className='btn-red' onClick={(e) => props.deleteTask(e, task.id)}>Delete</button>                                                         \n                </div>\n            </li>\n\n            )}\n        </ul>\n    ) : null}\n</div>\n    );\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}