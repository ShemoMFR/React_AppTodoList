{"ast":null,"code":"import _objectSpread from\"/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'../styles/TodoList.css';import Modal from'react-modal';import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TodoList(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modalIsOpen=_useState2[0],setModalIsOpen=_useState2[1];var _useState3=useState({id:'',title:'',task:'',isCompleted:'',dateCreated:'',dateUpdated:''}),_useState4=_slicedToArray(_useState3,2),taskSave=_useState4[0],setTaskSave=_useState4[1];function handleSubmit(e){e.preventDefault();props.editTask(_objectSpread(_objectSpread({},taskSave),{},{dateUpdated:moment().format('MMMM Do YYYY, h:mm:ss a')}));setModalIsOpen(false);}function openNote(task){setTaskSave(task);}return/*#__PURE__*/_jsxs(\"div\",{className:\"grid-wrapper\",children:[props.todoList!==[]?/*#__PURE__*/_jsx(\"ul\",{children:props.todoList.map(function(task){return/*#__PURE__*/_jsxs(\"li\",{className:\"grid-item\",onClick:function onClick(){return openNote(task);},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"note-wrapper\",onClick:function onClick(){return setModalIsOpen(true);},children:[/*#__PURE__*/_jsxs(\"span\",{className:\"note-date\",children:[task.dateCreated,\" \",/*#__PURE__*/_jsx(\"i\",{children:\"(Initial date)\"})]}),/*#__PURE__*/_jsxs(\"span\",{className:\"note-date\",children:[task.dateUpdated,\" \",/*#__PURE__*/_jsx(\"i\",{children:\"(date updated)\"})]}),/*#__PURE__*/_jsxs(\"span\",{className:\"note-title\",children:[' ',/*#__PURE__*/_jsxs(\"strong\",{children:[/*#__PURE__*/_jsx(\"u\",{children:\"Title\"}),\" : \",task.title]})]}),/*#__PURE__*/_jsxs(\"span\",{className:\"note-text\",children:[' ',/*#__PURE__*/_jsx(\"b\",{children:/*#__PURE__*/_jsx(\"u\",{children:\"Text\"})}),' ',\": \",task.task]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"btn-wrapper\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn-red\",onClick:function onClick(e){return props.deleteTask(e,task.id);},children:\"Delete\"})})]},task.id);})}):null,/*#__PURE__*/_jsx(Modal,{isOpen:modalIsOpen,shouldCloseOnOverlayClick:false,onRequestClose:function onRequestClose(){return setModalIsOpen(false);},children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"note-date\",children:taskSave.dateCreated}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"note-title\",children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"Title : \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:taskSave.title,onChange:function onChange(e){return setTaskSave(_objectSpread(_objectSpread({},taskSave),{},{title:e.target.value}));}})]})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"textarea\",{cols:\"100\",rows:\"10\",value:taskSave.task,onChange:function onChange(e){return setTaskSave(_objectSpread(_objectSpread({},taskSave),{},{task:e.target.value}));}}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn-modal\",onClick:function onClick(){return setModalIsOpen(false);},children:\"Close\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn-modal\",children:\"Edit\"})]})]})]})})]});}export default TodoList;","map":{"version":3,"sources":["/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/src/components/TodoList.js"],"names":["React","useState","Modal","moment","TodoList","props","modalIsOpen","setModalIsOpen","id","title","task","isCompleted","dateCreated","dateUpdated","taskSave","setTaskSave","handleSubmit","e","preventDefault","editTask","format","openNote","todoList","map","deleteTask","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport '../styles/TodoList.css';\nimport Modal from 'react-modal';\nimport moment from 'moment';\n\nfunction TodoList(props) {\n\tconst [modalIsOpen, setModalIsOpen] = useState(false);\n\tconst [taskSave, setTaskSave] = useState({\n\t\tid: '',\n\t\ttitle: '',\n\t\ttask: '',\n\t\tisCompleted: '',\n\t\tdateCreated: '',\n\t\tdateUpdated: ''\n\t});\n\n\tfunction handleSubmit(e) {\n\t    e.preventDefault();\n        props.editTask({ ...taskSave, dateUpdated: moment().format('MMMM Do YYYY, h:mm:ss a')});\n        setModalIsOpen(false);\n\t}\n\n\tfunction openNote(task) {\n\t\tsetTaskSave(task);\n\t}\n\n\treturn (\n\t\t<div className='grid-wrapper'>\n\t\t\t{props.todoList !== [] ? (\n\t\t\t\t<ul>\n\t\t\t\t\t{props.todoList.map((task) => (\n\t\t\t\t\t\t<li className='grid-item' key={task.id} onClick={() => openNote(task)}>\n\t\t\t\t\t\t\t<div className='note-wrapper' onClick={() => setModalIsOpen(true)}>\n\t\t\t\t\t\t\t\t<span className='note-date'>{task.dateCreated} <i>(Initial date)</i></span>\n\t\t\t\t\t\t\t\t<span className='note-date'>{task.dateUpdated} <i>(date updated)</i></span>\n\t\t\t\t\t\t\t\t<span className='note-title'>{' '}<strong><u>Title</u> : {task.title}</strong></span>\n\t\t\t\t\t\t\t\t<span className='note-text'>{' '}<b><u>Text</u></b>{' '}: {task.task}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='btn-wrapper'>\n\t\t\t\t\t\t\t\t<button className='btn-red' onClick={(e) => props.deleteTask(e, task.id)}>Delete</button>\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : null}\n\n\t\t\t<Modal\n\t\t\t\tisOpen={modalIsOpen}\n\t\t\t\tshouldCloseOnOverlayClick={false}\n\t\t\t\tonRequestClose={() => setModalIsOpen(false)}>\n\t\t\t\t<div className='modal'>\n\t\t\t\t\t<div className='note-date'>{taskSave.dateCreated}</div>\n\t\t\t\t\t<br />\n\t\t\t\t\t<div className='note-title'><strong>\n\t\t\t\t\t\tTitle : <input type='text' value={taskSave.title} \n\t\t\t\t\t\tonChange={(e) => setTaskSave({ ...taskSave, title: e.target.value })}\t/>\t\t\t\n\t\t\t\t\t\t</strong></div>\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tcols='100'\n\t\t\t\t\t\t\trows='10'\n\t\t\t\t\t\t\tvalue={taskSave.task}\n\t\t\t\t\t\t\tonChange={(e) => setTaskSave({ ...taskSave, task: e.target.value })} >\n\t\t\t\t\t\t</textarea>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button className='btn-modal' onClick={() => setModalIsOpen(false)}>\n\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"submit\" className='btn-modal'>Edit</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}