{"ast":null,"code":"var _jsxFileName = \"/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport TodoList from './TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm() {\n  _s();\n\n  const [todo, setTodo] = useState('');\n  const [todoList, setTodoList] = useState(() => JSON.parse(localStorage.getItem('todoList')) || []);\n  const [title, setTitle] = useState('');\n\n  function handleChangeTitle(e) {\n    setTitle(e.target.value);\n  }\n\n  function handleChangeNote(e) {\n    setTodo(e.target.value);\n  }\n\n  function addTask() {\n    if (todo !== '') {\n      const taskDetails = {\n        id: Math.floor(Math.random() * 1000),\n        title: title,\n        task: todo,\n        isCompleted: false,\n        dateCreated: moment().format('MMMM Do YYYY, h:mm:ss a')\n      };\n      const newTodoList = [...todoList, taskDetails];\n      setTodoList(newTodoList);\n      localStorage.setItem('todoList', JSON.stringify(newTodoList));\n      setTitle('');\n      setTodo('');\n    }\n  }\n\n  function deleteTask(e, id) {\n    e.stopPropagation();\n\n    if (window.confirm('Are you sure you want to delete your note?')) {\n      const newTodoList = todoList.filter(task => task.id !== id);\n      setTodoList(newTodoList);\n      localStorage.setItem('todoList', JSON.stringify(newTodoList));\n    }\n  }\n\n  function editTask(task) {\n    const index = todoList.findIndex(item => item.id === task.id);\n    const newTodoList = [...todoList];\n    newTodoList[index] = task;\n    setTodoList(newTodoList);\n    localStorage.setItem('todoList', JSON.stringify(newTodoList));\n    console.log(task);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => handleChangeTitle(e),\n        placeholder: \"Enter title\",\n        value: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"10\",\n        name: \"text\",\n        id: \"text\",\n        placeholder: \"Enter task...\",\n        onChange: e => handleChangeNote(e),\n        value: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-btn\",\n        onClick: addTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todoList: todoList,\n      deleteTask: deleteTask,\n      editTask: editTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n}\n\n_s(TodoForm, \"DlInarItDU6odbvRonR32mZiNJ8=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/home/mfr/Desktop/ITC/ITC_Projects/JS_Projects/react-project-1-ShemoMFR/todolist/src/components/TodoForm.js"],"names":["React","useState","moment","TodoList","TodoForm","todo","setTodo","todoList","setTodoList","JSON","parse","localStorage","getItem","title","setTitle","handleChangeTitle","e","target","value","handleChangeNote","addTask","taskDetails","id","Math","floor","random","task","isCompleted","dateCreated","format","newTodoList","setItem","stringify","deleteTask","stopPropagation","window","confirm","filter","editTask","index","findIndex","item","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport moment from 'moment';\nimport TodoList from './TodoList';\n\nfunction TodoForm() {\n\tconst [todo, setTodo] = useState('');\n\tconst [todoList, setTodoList] = useState(\n\t\t() => JSON.parse(localStorage.getItem('todoList')) || [],\n\t);\n\tconst [title, setTitle] = useState('');\n\n\tfunction handleChangeTitle(e) {\n\t\tsetTitle(e.target.value);\n\t}\n\n\tfunction handleChangeNote(e) {\n\t\tsetTodo(e.target.value);\n\t}\n\n\tfunction addTask() {\n\t\tif (todo !== '') {\n\t\t\tconst taskDetails = {\n\t\t\t\tid: Math.floor(Math.random() * 1000),\n\t\t\t\ttitle: title,\n\t\t\t\ttask: todo,\n\t\t\t\tisCompleted: false,\n\t\t\t\tdateCreated: moment().format('MMMM Do YYYY, h:mm:ss a'),\n\t\t\t};\n\n\t\t\tconst newTodoList = [...todoList, taskDetails];\n\t\t\tsetTodoList(newTodoList);\n\t\t\tlocalStorage.setItem('todoList', JSON.stringify(newTodoList));\n\t\t\tsetTitle('');\n\t\t\tsetTodo('');\n\t\t}\n\t}\n\n\tfunction deleteTask(e, id) {\n\t\te.stopPropagation();\n\n\t\tif (window.confirm('Are you sure you want to delete your note?')) {\n\t\t\tconst newTodoList = todoList.filter((task) => task.id !== id);\n\t\t\tsetTodoList(newTodoList);\n\t\t\tlocalStorage.setItem('todoList', JSON.stringify(newTodoList));\n\t\t}\n\t}\n\n\tfunction editTask(task) {\n\t\tconst index = todoList.findIndex((item) => item.id === task.id);\n\t\tconst newTodoList = [...todoList];\n\t\tnewTodoList[index] = task;\n\t\tsetTodoList(newTodoList);\n\t\tlocalStorage.setItem('todoList', JSON.stringify(newTodoList));\n\t\tconsole.log(task);\n\t}\n\n\treturn (\n\t\t<div className='form'>\n\t\t\t<div className='input-container'>\n\t\t\t\t<div className='title'>Todo List</div>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tonChange={(e) => handleChangeTitle(e)}\n\t\t\t\t\tplaceholder='Enter title'\n\t\t\t\t\tvalue={title}\n\t\t\t\t/>\n\t\t\t\t<textarea\n\t\t\t\t\trows='10'\n\t\t\t\t\tname='text'\n\t\t\t\t\tid='text'\n\t\t\t\t\tplaceholder='Enter task...'\n\t\t\t\t\tonChange={(e) => handleChangeNote(e)}\n\t\t\t\t\tvalue={todo}\n\t\t\t\t/>\n\n\t\t\t\t<button className='add-btn' onClick={addTask}>\n\t\t\t\t\tAdd\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<br />\n\n\t\t\t<TodoList todoList={todoList} deleteTask={deleteTask} editTask={editTask} />\n\t\t</div>\n\t);\n}\n\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}